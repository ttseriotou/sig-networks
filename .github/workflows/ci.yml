name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - develop
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3

jobs:
  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --hook-stage manual --all-files

  # checks:
  #   name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
  #   runs-on: ${{ matrix.runs-on }}
  #   needs: [pre-commit]
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.8"]
  #       runs-on: [ubuntu-latest, macos-latest]

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install torch
  #       run: pip install torch==1.9.0 torchvision==0.10.0 torchaudio==0.9.0

  #     - name: Debug installed packages
  #       run: pip list

  #     - name: Debug Python environment
  #       run: python -V

  #     - name: Install signatory
  #       run: |
  #         pip install signatory==1.2.6.1.9.0 --no-cache-dir --force-reinstall

  #     - name: Install package
  #       run: python -m pip install .[test]

  #     - name: Test package
  #       run: python -m pytest -ra --cov=nlpsig

  dist:
    name: Distribution build
    runs-on: ubuntu-latest
    needs: [pre-commit]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build sdist and wheel
        run: pipx run build

      - uses: actions/upload-artifact@v3
        with:
          path: dist

      - name: Check products
        run: pipx run twine check dist/*

      - uses: pypa/gh-action-pypi-publish@v1.8.10
        if: github.event_name == 'release' && github.event.action == 'published'
        with:
          # Remember to generate this and set it in "GitHub Secrets"
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
